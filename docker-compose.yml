services:
  radar:
    build:
      context: radar
      args:
        DJANGO_HOST: ${DJANGO_HOST}
        DJANGO_HOST_LOCAL: ${DJANGO_HOST_LOCAL}
        DJANGO_PORT: ${DJANGO_PORT}
    depends_on:
      api:
        condition: service_healthy
    volumes:
      - radar_data:/radar_data

  api:
    build:
      context: api
      args:
        DEBUG: ${DEBUG}
        POSTGRES_DB: ${POSTGRES_DB}
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_HOST: ${POSTGRES_HOST}
        POSTGRES_HOST_LOCAL: ${POSTGRES_HOST_LOCAL}
        POSTGRES_PORT: ${POSTGRES_PORT}
        DJANGO_SUPERUSER_USERNAME: ${DJANGO_SUPERUSER_USERNAME}
        DJANGO_SUPERUSER_PASSWORD: ${DJANGO_SUPERUSER_PASSWORD}
        SECRET_KEY: ${SECRET_KEY}
    ports:
      - "8000:8000"
    volumes:
      - radar_data:/radar_data
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", 'bash -c "exec 6<> /dev/tcp/localhost/8000"']
      start_period: 15s
      interval: 5s
      timeout: 5s
      retries: 15

  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 3s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  radar_data:
